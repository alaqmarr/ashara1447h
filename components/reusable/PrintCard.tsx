'use client'

import React, { useRef } from 'react'
import { useReactToPrint } from 'react-to-print'
import { Button } from '@/components/ui/button'
import Link from 'next/link'
import { Printer, Scan, Download } from 'lucide-react'
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card'
import { toast } from 'react-hot-toast'
import Image from 'next/image'

interface PrintCardProps {
  name: string
  centreName: string
  qrId: string
}

export const PrintCard: React.FC<PrintCardProps> = ({ name, centreName, qrId }) => {
  const printRef = useRef<HTMLDivElement>(null)
  const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(`https://helpline.ashara1447relaysec.com/${qrId}`)}`

  const handlePrint = useReactToPrint({
    contentRef: printRef,
    pageStyle: `
    @page {
      size: A4;
      margin: 20mm;
    }
    @media print {
      body {
        background-color: #f9fafb !important;
        -webkit-print-color-adjust: exact;
      }
      .print-only {
        display: block !important;
      }
    }
  `,
    onAfterPrint: () =>
      toast.success("QR code has been printed"),
    onPrintError: () =>
      toast.error("Failed to print QR code"),
  })


  const handleDownload = () => {
    const link = document.createElement('a')
    link.href = qrUrl
    link.download = `${name.replace(/\s+/g, '_')}.png`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)

    toast.success("QR code downloaded successfully")
  }

  return (
    <Card className="w-full max-w-md mx-auto shadow-lg">

      <CardContent className="flex flex-col items-center">
        {/* Printable content */}
        <div ref={printRef} className="p-6 bg-white rounded-lg">
          <div className="print-only mb-4 text-center">
            <h2 className="text-xl font-semibold">{name}</h2>
            <p className="text-sm text-gray-600">{centreName}</p>
          </div>

          <p className="mb-6 text-center text-gray-700">
            For any <span className="font-semibold text-red-600">assistance</span> or{' '}
            <span className="font-semibold text-red-600">emergency</span>, scan this QR code:
          </p>

          <div className="flex justify-center mb-6">
            <div className="relative w-48 h-48 border-2 border-blue-100 rounded-lg p-2 bg-white">
              <Image
                src={qrUrl}
                alt={`QR Code for ${name}`}
                width={200}
                height={200}
                className="w-full h-full"
                unoptimized // Since we're using a third-party QR service
              />
            </div>
          </div>

          <p className="text-xs text-center text-gray-500 print-only">
            Generated by Ashara1447RelaySec â€¢ {new Date().toLocaleDateString()}
          </p>
        </div>

        {/* Non-printable preview */}
        <div className="flex justify-center mb-6 md:hidden">
          <div className="relative w-32 h-32 border border-gray-200 rounded-lg">
            <Image
              src={qrUrl}
              alt={`QR Code preview for ${name}`}
              width={128}
              height={128}
              className="w-full h-full"
              unoptimized
            />
          </div>
        </div>
      </CardContent>

      <CardFooter className="flex flex-col sm:flex-row gap-3 justify-center">
        <Button onClick={handlePrint} className="gap-2">
          <Printer className="h-4 w-4" />
          Print QR
        </Button>
        <Button variant="outline" onClick={handleDownload} className="gap-2">
          <Download className="h-4 w-4" />
          Download
        </Button>
        <Link href={`/${qrId}`} passHref>
          <Button variant="secondary" className="gap-2">
            <Scan className="h-4 w-4" />
            Visit Helpline
          </Button>
        </Link>
      </CardFooter>
    </Card>
  )
}